apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
//apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
            srcDir 'src/test/resources'
        }
    }
}

dependencies {
   
    compile 'com.google.guava:guava:23.0'
	compile 'org.apache.logging.log4j:log4j-core:2.11.1'
	compile 'org.apache.logging.log4j:log4j-api:2.11.1'
	
	compile fileTree(dir: 'lib', include: '*.jar')

    testCompile("org.junit.jupiter:junit-jupiter-api:5.2.0")
    testCompile("org.junit.jupiter:junit-jupiter-params:5.2.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.2.0")
    
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}
//test.finalizedBy jacocoTestReport

repositories {

    jcenter()
}

checkstyle {
    toolVersion '8.12'
    configFile file("config/checkstyle/checkstyle.xml")
}
checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}

findbugs {
    ignoreFailures = false
    toolVersion = "3.0.1"
    reportsDir = file("$project.buildDir/reports/findbugs")
    effort = "max"
}
tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

/*
jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
        html.destination file("$project.buildDir/reports/coverage")
    }
}
*/

def excludedTaskList = ["checkstyleMain", "checkstyleTest", "findbugsMain", "findbugsTest" ] as ArrayList
//gradle.startParameter.setExcludedTaskNames(excludedTaskList);
